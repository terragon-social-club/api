/**
 * This module was automatically generated by `ts-interface-builder`
 */
import * as t from "ts-interface-checker";
// tslint:disable:object-literal-key-quotes

export const ValidatorError = t.iface([], {
  "field": "string",
  "message": "string",
});

export const ValidatorResult = t.iface([], {
  "error": "boolean",
  "detail": t.opt("ValidatorError"),
});

export const Member = t.iface([], {
  "_id": t.opt("string"),
  "_rev": t.opt("string"),
  "person_name": "string",
  "name": "string",
  "password": "string",
  "password_confirm": t.opt("string"),
  "phone": t.opt("string"),
  "email": "string",
});

export const FoundingMemberPayment = t.iface([], {
  "cc_name": "string",
  "cc_number": "string",
  "cc_exp_month": "string",
  "cc_exp_year": "string",
  "cc_zipcode": "string",
  "cc_terms_agree": "boolean",
});

export const Card = t.iface([], {
  "account_number": "string",
  "expiration_month": "number",
  "expiration_year": "number",
});

export const Invite = t.iface([], {
  "invite_code": "string",
});

const exportedTypeSuite: t.ITypeSuite = {
  ValidatorError,
  ValidatorResult,
  Member,
  FoundingMemberPayment,
  Card,
  Invite,
};
export default exportedTypeSuite;
